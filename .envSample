SONAR_HOST_URL=http://localhost:9000
SONAR_LOGIN=<token>
SONAR_PROJECTNAME_PREFIX=github ::
SONAR_SOURCES=src
SONAR_JAVA_BINARIES=target
SONAR_GITHUB_REPOSITORY=<org>/<repo>
SONAR_ANALYSIS_MODE=preview
SONAR_GITHUB_OAUTH=<github personal access token>
SONAR_GITHUB_ENDPOINT=
GIT_CLONE=https://github.com/<org>/<repo>.git
GIT_PR_BRANCHNAME=<branch>
GIT_PR_ID=<pull request number>
BUILD_TYPE=<nodejs|maven|gradle>
S3_DEPENDENCY_BUCKET=gtmstorage
GTM_AWS_REGION=<redacted>
GTM_AWS_ACCESS_KEY_ID=<redacted>
GTM_AWS_SECRET_ACCESS_KEY=<redacted>
IAM_ENABLED=<true to use ec2 instance profile>
AWS_S3_PROXY=<redacted>
SLS_AWS_STAGE=dev
SLS_AWS_REGION=<aws region>
SLS_CUSTOM_DOMAIN=<custom apigw domain>
SLS_DEPLOY_MODE=<parallel or sequential deploy of multiple lambdas>
SLS_APIGW_ENDPOINT_TYPE=<EDGE, REGIONAL, or PRIVATE for private vpc endpoint>
SLS_AWS_EXECUTION_ROLE=<role arn for lambda execution>
SLS_DEPLOYMENT_S3_BUCKET_PREFIX=<use a shared bucket prefix>
SLS_HTTP_PROXY=<https_proxy env var for sls build>
SLS_NO_PROXY=<no_proxy env var for sls build>
SLS_VPC_ID=<optional vpc id>
SLS_VPC_SECURITY_GROUP_ID=<optional vpc security group id>
SLS_VPC_SUBNET_A=<optional vpc subnet id>
SLS_VPC_SUBNET_B=<optional vpc subnet id>
SLS_VPC_SUBNET_C=<optional vpc subnet id>
SLS_AWS_KMS_KEY_ID=<kms key for encrypted env vars>
SLS_CONFIG_TYPE=<ssm or spring or dotenv>
SLS_SPRING_CONFIG_ENDPOINT=http://spring:8888
GTM_WORKER_SCRIPTS_CLONE=https://github.com/zotoio/gtm-worker-scripts.git
GTM_WORKER_SCRIPTS_PATH=scripts